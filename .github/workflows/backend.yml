name: KFP Tekton backend unit tests

on:
  push:
    branches: [master]

  # Run tests for any PRs which change the backend code
  pull_request:
    paths:
      - '.github/workflows/backend.yml'
      - 'go.mod'
      - 'backend/**'
      - '.github/resources/**'
      - 'manifests/kustomize/**'

env:
  GITHUB_ACTION: "true"
  SETUPTOOLS_USE_DISTUTILS: "stdlib"

jobs:
  run-go-unittests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
    - name: "run go unit tests"
      run: go test -v -cover ./backend/...
  backend-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install sdk
        run: |
          make setup-backend-test
      - name: Create KFP cluster
        uses: ./.github/actions/kfp-tekton-cluster


      - name: "flip coin test"
        id: flip-coin
        run: |
          make test-backend-test-flip-coin
        continue-on-error: true

      - name: "static loop test"
        id: static-loop
        run: |
          make test-backend-test-static-loop
        continue-on-error: true

      - name: "dynamic loop test"
        id: dynamic-loop
        run: |
          make test-backend-test-dynamic-loop
        continue-on-error: true

      - name: "use env"
        id: use-env
        run: |
          make test-backend-test-env
        continue-on-error: true

      - name: "use volume"
        id: use-volume
        run: |
          make test-backend-test-volume
        continue-on-error: true

      - name: Collect failed logs
        if: ${{ (steps.flip-coin.outcome != 'success') || (steps.static-loop.outcome != 'success') || (steps.dynamic-loop.outcome != 'success') || (steps.use-env.outcome != 'success') || (steps.use-volume.outcome != 'success') }}
        run: |
          ./.github/resources/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp.log/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-tekton-backend-artifacts
          path: /tmp/tmp*/*
