#!/bin/bash

# Copyright 2018 The Kubeflow Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -ex

export TMP_OUTPUT=/tmp
API_VERSION=$API_VERSION
REPO_ROOT=$(pwd) # Automatically detect the current working directory
echo "Using PROTOC compiler: ${PROTOCCOMPILER}"

# Change directory to repository root
cd "${REPO_ROOT}"
KFP_VERSION=$(cat VERSION)

# Delete currently generated code
rm -rf backend/api/${API_VERSION}/go_http_client/*
rm -rf backend/api/${API_VERSION}/go_client/*
# Note: Do not delete all files in swagger as some are manually maintained
mkdir -p backend/api/${API_VERSION}/{go_http_client,go_client,swagger}

# Generate *.pb.go (gRPC API client) from *.proto
${PROTOCCOMPILER} -I. -Ibackend/api/${API_VERSION} \
    -Ithird_party/googleapis \
    --plugin=protoc-gen-go=$(which protoc-gen-go) \
    --go_out=plugins=grpc:${TMP_OUTPUT} \
    backend/api/${API_VERSION}/*.proto

# Generate *.pb.gw.go (gRPC REST API client) from *.proto
${PROTOCCOMPILER} -I. -Ibackend/api/${API_VERSION} \
    -Ithird_party/googleapis \
    --plugin=protoc-gen-grpc-gateway=$(which protoc-gen-grpc-gateway) \
    --grpc-gateway_out=logtostderr=true:${TMP_OUTPUT} \
    backend/api/${API_VERSION}/*.proto

# Move generated files to go_client
cp ${TMP_OUTPUT}/github.com/kubeflow/pipelines/backend/api/${API_VERSION}/go_client/* backend/api/${API_VERSION}/go_client

# Generate Swagger files from *.proto
${PROTOCCOMPILER} -I. -Ibackend/api/${API_VERSION} \
    -Ithird_party/googleapis \
    --plugin=protoc-gen-swagger=$(which protoc-gen-swagger) \
    --swagger_out=logtostderr=true:${TMP_OUTPUT} \
    backend/api/${API_VERSION}/*.proto

# Move Swagger files to the swagger directory
cp -a ${TMP_OUTPUT}/backend/api/${API_VERSION}/*.swagger.json backend/api/${API_VERSION}/swagger

# Merge Swagger JSON files into a single file
jq -s 'reduce .[] as $item ({}; . * $item) | 
  .info.title = "Kubeflow Pipelines API" | 
  .info.description = "This file contains REST API specification for Kubeflow Pipelines. The file is autogenerated from the Swagger definition." | 
  .info.version = "'$KFP_VERSION'" | 
  .info.contact = { "name": "google", "email": "kubeflow-pipelines@google.com", "url": "https://www.google.com" } | 
  .info.license = { "name": "Apache 2.0", "url": "https://raw.githubusercontent.com/kubeflow/pipelines/master/LICENSE" }' \
  backend/api/${API_VERSION}/swagger/*.swagger.json > backend/api/${API_VERSION}/swagger/kfp_api_single_file.swagger.json

# Generate go_http_client code from Swagger files
for SWAGGER_FILE in backend/api/${API_VERSION}/swagger/*.swagger.json; do
  SERVICE_NAME=$(basename ${SWAGGER_FILE} .swagger.json)
  swagger generate client \
    -f ${SWAGGER_FILE} \
    -A ${SERVICE_NAME} \
    --principal models.Principal \
    -c ${SERVICE_NAME}_client \
    -m ${SERVICE_NAME}_model \
    -t backend/api/${API_VERSION}/go_http_client
done

# Apply manual fixes for known issues
sed -i -- 's/MaxConcurrency int64 `json:"max_concurrency,omitempty"`/MaxConcurrency int64 `json:"max_concurrency,omitempty,string"`/g' backend/api/${API_VERSION}/go_http_client/*_model/api_job.go
sed -i -- 's/IntervalSecond int64 `json:"interval_second,omitempty"`/IntervalSecond int64 `json:"interval_second,omitempty,string"`/g' backend/api/${API_VERSION}/go_http_client/*_model/api_periodic_schedule.go

# Run `go generate` for the generated code
cd backend/api && go generate ./...
