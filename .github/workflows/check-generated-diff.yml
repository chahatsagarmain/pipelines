name: Validate Generated Files
on:
  pull_request:
    paths:
      - 'backend/api/**/*.proto'
      - '.github/workflows/check-generated-diff.yml'
      - 'backend/api/**/go_http_client/**'
      - 'backend/api/**/go_client/**'
      - 'backend/api/**/python_http_client/**'
      - 'backend/api/**/swagger/**'

jobs:
  validate-generated-files:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api_version: ['v1beta1', 'v2beta1']
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          path: pipelines

      - name: Create symlink for Go workspace
        run: |
          mkdir -p /go/src/github.com/kubeflow
          ln -s $GITHUB_WORKSPACE/pipelines /go/src/github.com/kubeflow/pipelines

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: pipelines/go.mod

      - name: Set up environment
        run: |
          echo "GOPATH=/go" >> $GITHUB_ENV
          echo "API_VERSION=${{ matrix.api_version }}" >> $GITHUB_ENV
          echo "PROTOCCOMPILER=protoc" >> $GITHUB_ENV
          echo "TMP_OUTPUT=/tmp" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          # Go dependencies
          sudo apt-get update && sudo apt-get install -y protobuf-compiler jq default-jdk python3 python3-pip curl
          go install github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway@latest
          go install github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger@latest
          go install github.com/golang/protobuf/protoc-gen-go@latest
          go install github.com/go-swagger/go-swagger/cmd/swagger@latest

          # Python dependencies
          python3 -m pip install setuptools wheel

      - name: Generate Proto Files
        env:
          API_VERSION: ${{ matrix.api_version }}
          PROTOCCOMPILER: "protoc"
          TMP_OUTPUT: "/tmp"
          KFP_REPO_PATH: "/go/src/github.com/kubeflow/pipelines"
        run: |
          cd /go/src/github.com/kubeflow/pipelines
          ./backend/api/hack/generator.sh

      - name: Generate Python Package
        env:
          API_VERSION: ${{ matrix.api_version }}
        run: |
          export API_VERSION=${{ matrix.api_version }}
          cd /go/src/github.com/kubeflow/pipelines
          ./backend/api/build_kfp_server_api_python_package.sh

      - name: Check for Changes
        run: |
          cd /go/src/github.com/kubeflow/pipelines
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "ERROR: Generated files are out of date for API version ${{ matrix.api_version }}."
            echo "Please regenerate using both generate_api.sh and build_kfp_server_api_python_package.sh"
            echo "Changes found in the following files:"
            git status
            echo "Diff of changes:"
            git diff
            exit 1
          fi