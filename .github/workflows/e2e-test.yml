name: KFP e2e tests

on:
  push:
    branches: [master]

  pull_request:
    paths:
      - '.github/workflows/e2e-test.yml'
      - '.github/resources/**'
      - 'go.mod'
      - 'go.sum'
      - 'backend/**'
      - 'frontend/**'
      - 'proxy/**'
      - 'manifests/kustomize/**'
      - 'test/**'

jobs:
  initialization-tests-v1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [ "v1.29.2", "v1.30.2", "v1.31.0" ]
    name: Initialization tests v1 - K8s ${{ matrix.k8s_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Create KFP cluster
        uses: ./.github/actions/kfp-cluster
        with:
          k8s_version: ${{ matrix.k8s_version }}

      - name: Forward Port and initialize tests v1
        id: tests
        run: make test-e2e-initialization-tests-v1
        continue-on-error: true

      - name: Collect failed logs
        if: steps.tests.outcome != 'success'
        run: |
          ./.github/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-initialization-tests-v1-artifacts-k8s-${{ matrix.k8s_version }}
          path: /tmp/tmp*/*

  initialization-tests-v2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [ "v1.29.2", "v1.30.2", "v1.31.0" ]
    name: Initialization tests v2 - K8s ${{ matrix.k8s_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Create KFP cluster
        uses: ./.github/actions/kfp-cluster
        with:
          k8s_version: ${{ matrix.k8s_version }}

      - name: Initialization tests v2
        id: tests
        run: make test-e2e-initialization-tests-v2
        continue-on-error: true

      - name: Collect failed logs
        if: steps.tests.outcome != 'success'
        run: |
          ./.github/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-initialization-tests-v2-artifacts-k8s-${{ matrix.k8s_version }}
          path: /tmp/tmp*/*

  api-integration-tests-v1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [ "v1.29.2", "v1.30.2", "v1.31.0" ]
    name: API integration tests v1 - K8s ${{ matrix.k8s_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Create KFP cluster
        uses: ./.github/actions/kfp-cluster
        with:
          k8s_version: ${{ matrix.k8s_version }}

      - name: API integration tests v1
        id: tests
        run:  make test-e2e-api-integration-tests-v1
        continue-on-error: true

      - name: Collect failed logs
        if: steps.tests.outcome != 'success'
        run: |
          ./.github/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-api-integration-tests-v1-artifacts-k8s-${{ matrix.k8s_version }}
          path: /tmp/tmp*/*

  api-integration-tests-v2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [ "v1.29.2", "v1.30.2", "v1.31.0" ]
    name: API integration tests v2 - K8s ${{ matrix.k8s_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Create KFP cluster
        uses: ./.github/actions/kfp-cluster
        with:
          k8s_version: ${{ matrix.k8s_version }}

      - name: API integration tests v2
        id: tests
        run: make test-e2e-api-integration-tests-v2       
        continue-on-error: true

      - name: Collect failed logs
        if: steps.tests.outcome != 'success'
        run: |
          ./.github/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-api-integration-tests-v2-artifacts-k8s-${{ matrix.k8s_version }}
          path: /tmp/tmp*/*

  frontend-integration-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [ "v1.29.2", "v1.30.2", "v1.31.0" ]
    name: Frontend Integration Tests - K8s ${{ matrix.k8s_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Create KFP cluster
        uses: ./.github/actions/kfp-cluster
        with:
          k8s_version: ${{ matrix.k8s_version }}

      - name: Forward API port and run integration test 
        id: tests
        run: make test-e2e-frontend-integration-test
        continue-on-error: true

      - name: Collect failed logs
        if: steps.tests.outcome != 'success'
        run: |
          ./.github/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-frontend-integration-test-artifacts-k8s-${{ matrix.k8s_version }}
          path: /tmp/tmp*/*
            
  basic-sample-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [ "v1.29.2", "v1.30.2", "v1.31.0" ]
    name: Basic Sample Tests - K8s ${{ matrix.k8s_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Create KFP cluster
        uses: ./.github/actions/kfp-cluster
        with:
          k8s_version: ${{ matrix.k8s_version }}

      - name: Forward API port and run integration tests
        id: tests
        run: make test-e2e-basic-sample-tests
        continue-on-error: true

      - name: Collect failed logs
        if: steps.tests.outcome != 'success'
        run: |
          ./.github/resources/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-e2e-tests-artifacts-k8s-${{ matrix.k8s_version }}
          path: /tmp/tmp*/*
